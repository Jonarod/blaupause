
// *    Typography config
// * ---------------------
// *   Contents:
// *    [1]. Typographic Scale
// *    [2]. Typography
// *        [1]. Base
// *        [2]. Font
// *        [3]. Scaling
// *        [4]. Headings
// * ---------------------

// * Typographc Scale
// *
// * 1. <html> is assigned percentage based on breakpoint
// * 2. $type--size set's body font-size in rem
// * 3. if $type__use-modular-scale: "true"; -> use modular scale specified in mixins/modular-scale & type/heading
// * 4. Otherwise, specify a scale below (will be real pixel values, so if you change the base font-size you have to re-adjust)
// * ---------------------

$type--use-modular-scale: true;

@if($type--use-modular-scale == true) {
    $scale:(
        ultra: ms(9),
        giga:  ms(8),
        mega:  ms(7),
        h1:    ms(6),
        h2:    ms(5),
        h3:    ms(4),
        h4:    ms(3),
        h5:    ms(2),
        h6:    ms(1)
    )!global;
} @else {
    $scale:(
        ultra: 84,
        giga:  72,
        mega:  60,
        h1:    48,
        h2:    36,
        h3:    24,
        h4:    21,
        h5:    18,
        h6:    16
    )!global;
}

// * Typography
// @exports type(base/font/scaling/heading, value);

$type: (

    // * Core

    base: (
        font-weight:       400,
        content-namespace: unquote(".typography"),
        size:              base(size),
        ratio:             base(ratio)
    ),

    // * Typefaces

    font: (
        primary:   font-stack(sans, helvetica-neue),
        secondary: font-stack(serif, baskerville)
    ),

    // * Responsive typography

    scaling: (
        palm: 87.5%,
        lap:  87.5%,
        desk: 100%,
        high: 112.5%
    ),

    // * Headings

    heading: (
        ratio:       1.25,
        font-weight: 700,
        font-style:  italic
    )
);

@function type($values, $val) {
    @return map-get(map-get($type, $values), $val);
}
