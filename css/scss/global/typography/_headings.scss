
// *    Headings
// * ---------------------
// * Contents:
// *   1. General heading styles
// *   2. Font-size declarations
// *   3. Content Headings
// * ---------------------


// * Genereal heading styles
// *  1. Hinders performance on old Android / iOS if  > 1000 words to render
// * ---------------------

h1,
h2,
h3,
h4,
h5,
h6 {
    margin: 0;
    line-height: 1;
    font-family: type(font,secondary);
    font-feature-settings: "kern", "liga";
    font-weight: type(heading,font-weight);
    font-style: type(heading,font-style);
    text-rendering: optimizeLegibility; // [1]
    color: palette(type,dark);
}

// * Font Size Declarations
// * Class names can be used if hierarchy is different from size
// * ---------------------

@mixin heading-font-size($value) {
    @if($type--use-modular-scale == true){
        font-size: $value;
    } @else {
        @include rem("font-size", $value);
    }
}

@each $heading in $scale {

    @if(nth($heading,1) != mega and nth($heading,1) != giga and nth($heading,1) != ultra) {
        #{nth($heading,1)},
        .#{nth($heading,1)}{
            @include heading-font-size(nth($heading,2));
        }
    } @else {
        .#{nth($heading,1)}{
            @include heading-font-size(nth($heading,2));
        }
    }
}

.vR--heading {
    line-height: type(heading,ratio);
    @include rem("margin-bottom", (sizing(type,number) / 4));
}

// * Content headings
// * Hook for headings inside you content-element.
// * ---------------------

#{type(base,content-namespace)} h1,
#{type(base,content-namespace)} h2,
#{type(base,content-namespace)} h3,
#{type(base,content-namespace)} h4,
#{type(base,content-namespace)} h5,
#{type(base,content-namespace)} h6, {
    @extend .vR--heading;
}
